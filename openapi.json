{
    "openapi": "3.1.0",
    "info": {
      "title": "FastAPI Todo API",
      "description": "A template backend web service using FastAPI",
      "version": "0.1.0"
    },
    "paths": {
      "/api/todos/{todo_id}": {
        "get": {
          "tags": [
            "todos"
          ],
          "summary": "Get Todo",
          "description": "Get a todo by ID.\n\nArgs:\n    todo_id: The ID of the todo to retrieve\n    todo_service: The todo service for interacting with todos\n\nReturns:\n    TodoResponse: The requested todo\n\nRaises:\n    TodoNotFoundError: If the todo is not found",
          "operationId": "get_todo_api_todos__todo_id__get",
          "parameters": [
            {
              "name": "todo_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Todo Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TodoResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "todos"
          ],
          "summary": "Update Todo",
          "description": "Update a todo.\n\nArgs:\n    todo_id: The ID of the todo to update\n    todo_in: The updated todo data\n    todo_service: The todo service for interacting with todos\n\nReturns:\n    TodoResponse: The updated todo\n\nRaises:\n    TodoNotFoundError: If the todo is not found",
          "operationId": "update_todo_api_todos__todo_id__put",
          "parameters": [
            {
              "name": "todo_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Todo Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TodoResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "todos"
          ],
          "summary": "Delete Todo",
          "description": "Delete a todo.\n\nArgs:\n    todo_id: The ID of the todo to delete\n    todo_service: The todo service for interacting with todos\n\nRaises:\n    TodoNotFoundError: If the todo is not found",
          "operationId": "delete_todo_api_todos__todo_id__delete",
          "parameters": [
            {
              "name": "todo_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Todo Id"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Successful Response"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/todos/": {
        "get": {
          "tags": [
            "todos"
          ],
          "summary": "Get Todos",
          "description": "Get all todos.\n\nArgs:\n    todo_service: The todo service for interacting with todos\n\nReturns:\n    list[TodoResponse]: List of all todos",
          "operationId": "get_todos_api_todos__get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/TodoResponse"
                    },
                    "type": "array",
                    "title": "Response Get Todos Api Todos  Get"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "todos"
          ],
          "summary": "Create Todo",
          "description": "Create a new todo.\n\nArgs:\n    todo_in: The todo data to create\n    todo_service: The todo service for interacting with todos\n\nReturns:\n    TodoResponse: The created todo",
          "operationId": "create_todo_api_todos__post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TodoResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "TodoCreate": {
          "properties": {
            "title": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1,
              "title": "Title",
              "description": "Title of the todo item"
            },
            "description": {
              "type": "string",
              "maxLength": 1000,
              "title": "Description",
              "description": "Detailed description of the todo item",
              "default": ""
            },
            "done": {
              "type": "boolean",
              "title": "Done",
              "description": "Indicates if the todo is completed",
              "default": false
            }
          },
          "type": "object",
          "required": [
            "title"
          ],
          "title": "TodoCreate",
          "description": "Model for creating a new Todo."
        },
        "TodoResponse": {
          "properties": {
            "title": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1,
              "title": "Title",
              "description": "Title of the todo item"
            },
            "description": {
              "type": "string",
              "maxLength": 1000,
              "title": "Description",
              "description": "Detailed description of the todo item",
              "default": ""
            },
            "done": {
              "type": "boolean",
              "title": "Done",
              "description": "Indicates if the todo is completed",
              "default": false
            },
            "id": {
              "type": "string",
              "title": "Id",
              "description": "Unique identifier for the todo item"
            }
          },
          "type": "object",
          "required": [
            "title",
            "id"
          ],
          "title": "TodoResponse",
          "description": "Model for Todo responses, includes all fields from TodoBase plus the ID."
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError"
        }
      }
    }
  }